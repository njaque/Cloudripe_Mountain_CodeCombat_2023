# This level shows how to define your own functions.
# The code inside a function is not executed immediately. It's saved for later.

# This function has your hero collect the nearest coin with a value of at least 2.
def pickUpNearestCoin():
    coins = hero.findItems()
    max_value = 0
    target_coin = None

    for coin in coins:
        if coin.value >= 2 and coin.value > max_value:
            max_value = coin.value
            target_coin = coin

    if target_coin:
        if hero.isReady("jump"):
            hero.jumpTo(target_coin.pos)
        else:
            hero.move(target_coin.pos)

# This function has your hero summon a soldier.
def summonSoldier():
    soldierCost = hero.costOf("soldier")
    if hero.gold >= soldierCost:
        hero.summon("soldier")

# This function commands your soldiers to attack the same enemy.
def commandSoldiers():
    friends = hero.findFriends()
    enemy = hero.findNearestEnemy()
    if enemy:
        for soldier in friends:
            if soldier.type != "decoy":
                hero.command(soldier, "attack", enemy)

# This function has your hero cast "chain-lightning" to attack the nearest enemy.
def castLightning():
    enemy = hero.findNearestEnemy()
    if enemy and enemy.type == ("munchkin", "shaman", "thrower") and hero.canCast("chain-lightning"):
        hero.cast("chain-lightning", enemy)

def hiddingHero():
    if hero.health <= hero.maxHealth * 0.75:
        hero.buildXY("fire-trap", hero.pos.x, hero.pos.y)

    if hero.canCast("invisibility"):
        hero.cast("invisibility", hero)

for i in range(1):
    hero.buildXY("decoy", hero.pos.x, hero.pos.y)

while True:
    # In your loop, you can "call" the functions defined above.
    # The following line causes the code inside the "pickUpNearestCoin" function to be executed.
    pickUpNearestCoin()
    # Call summonSoldier here
    summonSoldier()
    # Call castLightning here
    castLightning()
    # Call commandSoldiers here
    commandSoldiers()
    # Call hidding here
    hiddingHero()
